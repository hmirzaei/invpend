#
# Luminary Micro Stellaris Evaluation Kits
#
# http://www.luminarymicro.com/products/evaluation_kits.html
#
# There are a number of evaluation kits for Stellaris Cortex-M3 chips.
# Currently they all bundle FT2232 based debug support.  When that is
# used (instead of an external adapter), use this config file in one
# of these two modes:
#
# - Eval board debug ... debug of the Stellaris chip via port A.
#
# - Other board debug ... same thing, but the board acts as a debug
#   adapter for another board (using a standard ARM JTAG connector).
#   The Stellaris chip stays in reset.
#
# Those support both JTAG and SWD.  SWD is an ARM-only two-wire debug
# protocol; in 2009, OpenOCD does not support SWD.
#
# Port B of the FT2232 chip is normally used as a serial link to the
# Stellaris chip.  On most boards (but not older LM3S811 eval boards),
# when SWD is used Port B may instead be used to read low-bandwidth
# "SWO trace" data, including so-called "printf style" output from
# firmware via the ITM module as well as profile data.
#

interface ft2232
ft2232_device_desc "Stellaris Evaluation Board"
ft2232_layout luminary_icdi
ft2232_vid_pid 0x0403 0xbcd9

# TI/Luminary Stellaris lm3s6965

if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME lm3s6965
}

if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x3ba00477
}

# jtag speed
adapter_khz 500

adapter_nsrst_delay 100

#LM3S6965 Evaluation Board has only srst
reset_config srst_only separate

#jtag scan chain
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 1 -irmask 0xf -expected-id $_CPUTAPID

# the luminary variant causes a software reset rather than asserting SRST
# this stops the debug registers from being cleared
# this will be fixed in later revisions of silicon
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m3 -chain-position $_CHIPNAME.cpu -variant lm3s

# 8k working area at base of ram, not backed up
$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size 0x4000



#flash configuration
set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME stellaris 0 0 0 0 $_TARGETNAME

init
	halt
	sleep 200
	wait_halt
	flash probe 0
	flash info 0
	flash erase_sector 0 0 last
	soft_reset_halt
	sleep 500
	flash write_image ./gcc/invpend.bin 0 bin
	sleep 200
	reset run
	shutdown





